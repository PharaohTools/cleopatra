---

- Logging[log]:
    log-message: "Lets Bake an ISO"
#
#- Download[file]:
#    label: 'Download the ISO file'
#    source: "$$iso_file_remote_location"
#    target: "/opt/ptvirtualize/boxes/$$var_os.$$var_os_version.$$var_os_group.iso"
#    guess: yes

- VariableGroups[dump]:
    label: 'Dump all loaded variables'
    guess: yes

- Bakery[osinstall]:
    label: "The OS Installation Stage"
    iso: "$$iso_path"
    name: "$$vm_name"
    ostype: "$$os_type"
    osversion: "$$os_vbox_version"
    memory: "512"
    vram: "33"
    cpus: "1"
    ssh_forwarding_port: "9988"
    user_name: "$$user_name"
    user_pass: "$$user_pass"
    full_user: "$$full_user"
    locale: "$$locale"
    country: "$$country"
    language: "$$language"
    gui_mode: "$$gui_mode"
    notify-delay: "$$notify_delay"
    guess: yes

- Mkdir[path]:
    label: "Ensure Temp Directory for Virtufile"
    path: "/tmp/ptv_vm_osinstall"
    recursive: true
    guess: yes

- PharaohToolRunner[run]:
    label: "Initialize a matching name"
    guess: true
    command: "cd /tmp/ptv_vm_osinstall && ptvirtualize init now --vars=/opt/ptconfigure/ptconfigure/src/Modules/Bakery/Autopilots/PTConfigure/vars_ubuntu_{{{ var::os_slug }}}.php,/opt/ptconfigure/ptconfigure/src/Modules/Bakery/Autopilots/PTConfigure/vars_all.php"
      'yes': true
      guess: true
      step-times: true
      step-numbers: true
      name: ptv_bakery_temp_vm
      os_slug: "$$os_slugvar"
#
#- RunCommand[execute]:
#    label: "Initialize a matching name"
#    command: 'cd /tmp/ptv_vm_osinstall && ptvirtualize init now --name="{{{ var::vm_name }}}" --vars="/opt/ptconfigure/ptconfigure/src/Modules/Bakery/Autopilots/PTConfigure/vars.php" -yg'
#    guess: yes

- PharaohToolRunner[run]:
    label: "Start it and install Guest Additions"
    guess: true
    tool: "ptvirtualize"
    module: "up"
    action: "now"
    prefix: "cd /tmp/ptv_vm_osinstall && "
#
#- RunCommand[execute]:
#    label: "Start it and install Guest Additions"
#    command: 'cd /tmp/ptv_vm_osinstall && ptvirtualize up now'
#    guess: yes

- PharaohToolRunner[run]:
    label: "PTV Halt it"
    guess: true
    tool: "ptvirtualize"
    module: "halt"
    action: "now"
    prefix: "cd /tmp/ptv_vm_osinstall && "
    params:
      'die-hard': true

#- RunCommand[execute]:
#    label: "PTV Halt it"
#    command: 'cd /tmp/ptv_vm_osinstall && ptvirtualize halt now --die-hard -yg'
#    guess: yes
#    ignore_errors: yes


- PharaohToolRunner[run]:
    label: "PTV Package the Virtual Machine into a Box file"
    guess: true
    tool: "ptvirtualize"
    module: "box"
    action: "package"
    prefix: "cd /tmp/ptv_vm_osinstall && "
    params:
      vars:
        - "/opt/ptconfigure/ptconfigure/src/Modules/Bakery/Autopilots/PTConfigure/vars_ubuntu_{{{ var::os_slug }}}.php"
        - "/opt/ptconfigure/ptconfigure/src/Modules/Bakery/Autopilots/PTConfigure/vars_all.php"
      'yes': true
      guess: true
      name: "ubuntu_{{{ var::os_slug }}}.server-64bit"
      vmname: "ptv_bakery_temp_vm"
      group: "ptvirtualize"
      provider: "virtualbox"
      description: "description placeholder"
      target: "/opt/ptvirtualize/boxes"
      os_slug: "{{{ var::os_slug }}}"
#
#- RunCommand[execute]:
#    label: "PTV Package the Virtual Machine into a Box file"
#    command: 'cd /tmp/ptv_vm_osinstall && ptvirtualize box package --name="$$full_name" --vmname="$$vm_name" --group="ptvirtualize" --description="$$vm_description" --target="/opt/ptvirtualize/boxes" -yg '
#    guess: yes


- PharaohToolRunner[run]:
    label: "Destroy the Virtual Machine"
    guess: true
    tool: "ptvirtualize"
    module: "destroy"
    action: "now"
    prefix: "cd /tmp/ptv_vm_osinstall && "
#
#- RunCommand[execute]:
#    label: "Destroy the Virtual Machine"
#    command: "cd /tmp/ptv_vm_osinstall && ptvirtualize destroy now"
#    guess: yes

- Logging[log]:
    log-message: "Baking of Image Completed "
